//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/scripts/gunControlls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @gunControlls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @gunControlls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""gunControlls"",
    ""maps"": [
        {
            ""name"": ""mainGunControlls(right)"",
            ""id"": ""08150f1a-660f-4caf-893c-27df00d4f76d"",
            ""actions"": [
                {
                    ""name"": ""shoot(right)"",
                    ""type"": ""Button"",
                    ""id"": ""ed749b1d-13d9-4e08-a096-2c5e9c74fc10"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""reload(right)"",
                    ""type"": ""Button"",
                    ""id"": ""9b271c46-b0e4-4a06-ad3f-1cb2e830c386"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""shoot(left)"",
                    ""type"": ""Button"",
                    ""id"": ""823d7fe9-34d8-414f-b877-b2a5d15f3bd8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""relode(left)"",
                    ""type"": ""Button"",
                    ""id"": ""88aa00ad-0091-46e6-85da-fc0258806018"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""jump"",
                    ""type"": ""Button"",
                    ""id"": ""5518607c-ae61-437c-a6ef-cad5609e22eb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RightJoystick"",
                    ""type"": ""Value"",
                    ""id"": ""4c1856a3-3951-4e4e-b965-49f9bc21992b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""leftJoystick"",
                    ""type"": ""Value"",
                    ""id"": ""01385bfc-eea3-42be-a5f3-8aa3131137d4"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""slide"",
                    ""type"": ""Button"",
                    ""id"": ""8f655431-77b8-4bbb-97ae-76d8367b4527"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""22439e4a-4d28-454c-8e4b-3be8c428eb25"",
                    ""path"": ""<XRController>{RightHand}/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""shoot(right)"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""37fbaad1-cfaa-4381-bbdf-1950a93e71eb"",
                    ""path"": ""<XRController>{RightHand}/joystickClicked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""reload(right)"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2f5b02be-44b7-4e6f-b852-efa729d2515f"",
                    ""path"": ""<XRController>{LeftHand}/triggerPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""shoot(left)"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3f57de51-e1e9-4317-a5aa-fb20c32cbe89"",
                    ""path"": ""<XRController>{LeftHand}/joystickClicked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""relode(left)"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fa15112d-1f05-4bbe-a9da-590611923f03"",
                    ""path"": ""<XRController>{RightHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6dc4e703-f5e2-4158-be3a-a276d136074a"",
                    ""path"": ""<XRController>{RightHand}/joystick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightJoystick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f8ed2cfb-5243-4b5a-82c1-e69992eb53bf"",
                    ""path"": ""<XRController>{LeftHand}/joystick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""leftJoystick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6cd858e1-6ab8-43eb-93cc-414969d3e33c"",
                    ""path"": ""<XRController>{RightHand}/secondaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""slide"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // mainGunControlls(right)
        m_mainGunControllsright = asset.FindActionMap("mainGunControlls(right)", throwIfNotFound: true);
        m_mainGunControllsright_shootright = m_mainGunControllsright.FindAction("shoot(right)", throwIfNotFound: true);
        m_mainGunControllsright_reloadright = m_mainGunControllsright.FindAction("reload(right)", throwIfNotFound: true);
        m_mainGunControllsright_shootleft = m_mainGunControllsright.FindAction("shoot(left)", throwIfNotFound: true);
        m_mainGunControllsright_relodeleft = m_mainGunControllsright.FindAction("relode(left)", throwIfNotFound: true);
        m_mainGunControllsright_jump = m_mainGunControllsright.FindAction("jump", throwIfNotFound: true);
        m_mainGunControllsright_RightJoystick = m_mainGunControllsright.FindAction("RightJoystick", throwIfNotFound: true);
        m_mainGunControllsright_leftJoystick = m_mainGunControllsright.FindAction("leftJoystick", throwIfNotFound: true);
        m_mainGunControllsright_slide = m_mainGunControllsright.FindAction("slide", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // mainGunControlls(right)
    private readonly InputActionMap m_mainGunControllsright;
    private IMainGunControllsrightActions m_MainGunControllsrightActionsCallbackInterface;
    private readonly InputAction m_mainGunControllsright_shootright;
    private readonly InputAction m_mainGunControllsright_reloadright;
    private readonly InputAction m_mainGunControllsright_shootleft;
    private readonly InputAction m_mainGunControllsright_relodeleft;
    private readonly InputAction m_mainGunControllsright_jump;
    private readonly InputAction m_mainGunControllsright_RightJoystick;
    private readonly InputAction m_mainGunControllsright_leftJoystick;
    private readonly InputAction m_mainGunControllsright_slide;
    public struct MainGunControllsrightActions
    {
        private @gunControlls m_Wrapper;
        public MainGunControllsrightActions(@gunControlls wrapper) { m_Wrapper = wrapper; }
        public InputAction @shootright => m_Wrapper.m_mainGunControllsright_shootright;
        public InputAction @reloadright => m_Wrapper.m_mainGunControllsright_reloadright;
        public InputAction @shootleft => m_Wrapper.m_mainGunControllsright_shootleft;
        public InputAction @relodeleft => m_Wrapper.m_mainGunControllsright_relodeleft;
        public InputAction @jump => m_Wrapper.m_mainGunControllsright_jump;
        public InputAction @RightJoystick => m_Wrapper.m_mainGunControllsright_RightJoystick;
        public InputAction @leftJoystick => m_Wrapper.m_mainGunControllsright_leftJoystick;
        public InputAction @slide => m_Wrapper.m_mainGunControllsright_slide;
        public InputActionMap Get() { return m_Wrapper.m_mainGunControllsright; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MainGunControllsrightActions set) { return set.Get(); }
        public void SetCallbacks(IMainGunControllsrightActions instance)
        {
            if (m_Wrapper.m_MainGunControllsrightActionsCallbackInterface != null)
            {
                @shootright.started -= m_Wrapper.m_MainGunControllsrightActionsCallbackInterface.OnShootright;
                @shootright.performed -= m_Wrapper.m_MainGunControllsrightActionsCallbackInterface.OnShootright;
                @shootright.canceled -= m_Wrapper.m_MainGunControllsrightActionsCallbackInterface.OnShootright;
                @reloadright.started -= m_Wrapper.m_MainGunControllsrightActionsCallbackInterface.OnReloadright;
                @reloadright.performed -= m_Wrapper.m_MainGunControllsrightActionsCallbackInterface.OnReloadright;
                @reloadright.canceled -= m_Wrapper.m_MainGunControllsrightActionsCallbackInterface.OnReloadright;
                @shootleft.started -= m_Wrapper.m_MainGunControllsrightActionsCallbackInterface.OnShootleft;
                @shootleft.performed -= m_Wrapper.m_MainGunControllsrightActionsCallbackInterface.OnShootleft;
                @shootleft.canceled -= m_Wrapper.m_MainGunControllsrightActionsCallbackInterface.OnShootleft;
                @relodeleft.started -= m_Wrapper.m_MainGunControllsrightActionsCallbackInterface.OnRelodeleft;
                @relodeleft.performed -= m_Wrapper.m_MainGunControllsrightActionsCallbackInterface.OnRelodeleft;
                @relodeleft.canceled -= m_Wrapper.m_MainGunControllsrightActionsCallbackInterface.OnRelodeleft;
                @jump.started -= m_Wrapper.m_MainGunControllsrightActionsCallbackInterface.OnJump;
                @jump.performed -= m_Wrapper.m_MainGunControllsrightActionsCallbackInterface.OnJump;
                @jump.canceled -= m_Wrapper.m_MainGunControllsrightActionsCallbackInterface.OnJump;
                @RightJoystick.started -= m_Wrapper.m_MainGunControllsrightActionsCallbackInterface.OnRightJoystick;
                @RightJoystick.performed -= m_Wrapper.m_MainGunControllsrightActionsCallbackInterface.OnRightJoystick;
                @RightJoystick.canceled -= m_Wrapper.m_MainGunControllsrightActionsCallbackInterface.OnRightJoystick;
                @leftJoystick.started -= m_Wrapper.m_MainGunControllsrightActionsCallbackInterface.OnLeftJoystick;
                @leftJoystick.performed -= m_Wrapper.m_MainGunControllsrightActionsCallbackInterface.OnLeftJoystick;
                @leftJoystick.canceled -= m_Wrapper.m_MainGunControllsrightActionsCallbackInterface.OnLeftJoystick;
                @slide.started -= m_Wrapper.m_MainGunControllsrightActionsCallbackInterface.OnSlide;
                @slide.performed -= m_Wrapper.m_MainGunControllsrightActionsCallbackInterface.OnSlide;
                @slide.canceled -= m_Wrapper.m_MainGunControllsrightActionsCallbackInterface.OnSlide;
            }
            m_Wrapper.m_MainGunControllsrightActionsCallbackInterface = instance;
            if (instance != null)
            {
                @shootright.started += instance.OnShootright;
                @shootright.performed += instance.OnShootright;
                @shootright.canceled += instance.OnShootright;
                @reloadright.started += instance.OnReloadright;
                @reloadright.performed += instance.OnReloadright;
                @reloadright.canceled += instance.OnReloadright;
                @shootleft.started += instance.OnShootleft;
                @shootleft.performed += instance.OnShootleft;
                @shootleft.canceled += instance.OnShootleft;
                @relodeleft.started += instance.OnRelodeleft;
                @relodeleft.performed += instance.OnRelodeleft;
                @relodeleft.canceled += instance.OnRelodeleft;
                @jump.started += instance.OnJump;
                @jump.performed += instance.OnJump;
                @jump.canceled += instance.OnJump;
                @RightJoystick.started += instance.OnRightJoystick;
                @RightJoystick.performed += instance.OnRightJoystick;
                @RightJoystick.canceled += instance.OnRightJoystick;
                @leftJoystick.started += instance.OnLeftJoystick;
                @leftJoystick.performed += instance.OnLeftJoystick;
                @leftJoystick.canceled += instance.OnLeftJoystick;
                @slide.started += instance.OnSlide;
                @slide.performed += instance.OnSlide;
                @slide.canceled += instance.OnSlide;
            }
        }
    }
    public MainGunControllsrightActions @mainGunControllsright => new MainGunControllsrightActions(this);
    public interface IMainGunControllsrightActions
    {
        void OnShootright(InputAction.CallbackContext context);
        void OnReloadright(InputAction.CallbackContext context);
        void OnShootleft(InputAction.CallbackContext context);
        void OnRelodeleft(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnRightJoystick(InputAction.CallbackContext context);
        void OnLeftJoystick(InputAction.CallbackContext context);
        void OnSlide(InputAction.CallbackContext context);
    }
}
